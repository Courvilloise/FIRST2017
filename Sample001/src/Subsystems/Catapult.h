// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef CATAPULT_H
#define CATAPULT_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
#include "CANTalon.h"
#include "CanTalonSRX.h"
/**
 *
 *
 * @author ExampleAuthor
 */

// API Documentation for the Talon SRX (http://www.ctr-electronics.com/downloads/api/cpp/html/_c_a_n_talon_8h.html)

class Catapult: public Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<CANTalon> pCAN1ThrowEngine;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	double currentSpeed; 	// Used to store the current value
	double savedSpeed;		// Used to store the save value
	bool valueSaved;		// To know if a call was done on SaveCurrentSpeed;

public:
	Catapult();
	void InitDefaultCommand();

	// Specify the speed of the motor that throw balls. Range between 0.0 to 1.0
	void SetRotationSpeed(double speed);
	// Increase (or decrase) the current speed by a specific delta. Range between -1.0 to 1.0
	void IncreaseSpeed(double delta);
	// Completely stop the motor that throw balls
	void Stop();
	// Save the current speed
	void SaveCurrentSpeed();
	// Restore the speed with the previous value.
	void RestoreSavedSpeed(double defaultSpeed=0.5);


	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
};

#endif
