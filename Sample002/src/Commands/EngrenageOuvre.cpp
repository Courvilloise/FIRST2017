// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "../definitions.h"

#ifdef UTILISE_ENGRENAGE
#include "EngrenageOuvre.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

EngrenageOuvre::EngrenageOuvre(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::engrenage.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void EngrenageOuvre::Initialize() {
	(Robot::engrenage.get())->Arrete();
}

// Called repeatedly when this Command is scheduled to run
void EngrenageOuvre::Execute() {
	(Robot::engrenage.get())->Tourne(ENGRENAGE_DIRECTION_OUVERTURE);
}

// Make this return true when this Command no longer needs to run execute()
bool EngrenageOuvre::IsFinished() {
	if ((Robot::engrenage.get())->LimiteOuvertureAtteinte() == ENGRENAGE_LIMITE_OUVERTURE_ATTEINTE)
	{
		(Robot::engrenage.get())->Arrete();
		return true;
	}
    return false;
}

// Called once after isFinished returns true
void EngrenageOuvre::End() {
	(Robot::engrenage.get())->Arrete();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void EngrenageOuvre::Interrupted() {

}
#endif
